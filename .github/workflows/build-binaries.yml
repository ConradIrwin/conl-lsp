name: Build Binaries

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            goos: linux
            goarch: amd64

          # Linux ARM64
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            goos: linux
            goarch: arm64

          # macOS x86_64
          - os: darwin
            arch: amd64
            runner: macos-latest
            goos: darwin
            goarch: amd64

          # macOS ARM64
          - os: darwin
            arch: arm64
            runner: macos-latest
            goos: darwin
            goarch: arm64

          # Windows x86_64
          - os: windows
            arch: amd64
            runner: windows-latest
            goos: windows
            goarch: amd64

          # Windows ARM64
          - os: windows
            arch: arm64
            runner: windows-latest
            goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: conl-lsp

      - name: Checkout conl-go dependency
        uses: actions/checkout@v4
        with:
          repository: ConradIrwin/conl-go
          path: conl
          ref: v0.3.1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build binary
        working-directory: conl-lsp
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            go build -o conl-lsp-${{ matrix.os }}-${{ matrix.arch }}.exe
          else
            go build -o conl-lsp-${{ matrix.os }}-${{ matrix.arch }}
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: conl-lsp-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            conl-lsp/conl-lsp-${{ matrix.os }}-${{ matrix.arch }}*
          retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries

      - name: Display structure of downloaded files
        run: ls -la binaries/*/

      - name: Create checksums and flatten structure
        run: |
          mkdir -p release-files
          cd binaries
          for dir in */; do
            if [ -d "$dir" ]; then
              cd "$dir"
              for file in *; do
                if [ -f "$file" ]; then
                  sha256sum "$file" > "../../release-files/$file.sha256"
                  cp "$file" "../../release-files/"
                fi
              done
              cd ..
            fi
          done

      - name: Create timestamp tag
        id: create_tag
        run: echo "tag=build-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          name: Automated Build ${{ steps.create_tag.outputs.tag }}
          body: |
            Automated build from commit ${{ github.sha }}

            ### Available binaries:
            - **Linux x86_64**: `conl-lsp-linux-amd64`
            - **Linux ARM64**: `conl-lsp-linux-arm64`
            - **macOS x86_64**: `conl-lsp-darwin-amd64`
            - **macOS ARM64 (Apple Silicon)**: `conl-lsp-darwin-arm64`
            - **Windows x86_64**: `conl-lsp-windows-amd64.exe`
            - **Windows ARM64**: `conl-lsp-windows-arm64.exe`

            Each binary includes a `.sha256` checksum file for verification.
          files: release-files/*
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
